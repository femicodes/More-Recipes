'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _sequelize = require('sequelize');

var _sequelize2 = _interopRequireDefault(_sequelize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var basename = _path2.default.basename(module.filename);
var env = process.env.NODE_ENV || 'development';
var config = require(__dirname + '/../config/config.json')[env];
var db = {};

var sequelize = void 0;
if (config.use_env_variable) {
	sequelize = new _sequelize2.default(process.env[config.use_env_variable]);
} else {
	sequelize = new _sequelize2.default(config.database, config.username, config.password, config);
}

_fs2.default.readdirSync(__dirname).filter(function (file) {
	return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';
}).forEach(function (file) {
	var model = sequelize['import'](_path2.default.join(__dirname, file));
	db[model.name] = model;
});

Object.keys(db).forEach(function (modelName) {
	if (db[modelName].associate) {
		db[modelName].associate(db);
	}
});

db.sequelize = sequelize;
db.Sequelize = _sequelize2.default;

module.exports = db;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJhc2VuYW1lIiwibW9kdWxlIiwiZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJyZXF1aXJlIiwiX19kaXJuYW1lIiwiZGIiLCJzZXF1ZWxpemUiLCJ1c2VfZW52X3ZhcmlhYmxlIiwiZGF0YWJhc2UiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwicmVhZGRpclN5bmMiLCJmaWx0ZXIiLCJmaWxlIiwiaW5kZXhPZiIsInNsaWNlIiwiZm9yRWFjaCIsIm1vZGVsIiwiam9pbiIsIm5hbWUiLCJPYmplY3QiLCJrZXlzIiwibW9kZWxOYW1lIiwiYXNzb2NpYXRlIiwiU2VxdWVsaXplIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxXQUFZLGVBQUtBLFFBQUwsQ0FBY0MsT0FBT0MsUUFBckIsQ0FBbEI7QUFDQSxJQUFNQyxNQUFZQyxRQUFRRCxHQUFSLENBQVlFLFFBQVosSUFBd0IsYUFBMUM7QUFDQSxJQUFNQyxTQUFZQyxRQUFRQyxZQUFZLHdCQUFwQixFQUE4Q0wsR0FBOUMsQ0FBbEI7QUFDQSxJQUFPTSxLQUFZLEVBQW5COztBQUVBLElBQUlDLGtCQUFKO0FBQ0EsSUFBSUosT0FBT0ssZ0JBQVgsRUFBNkI7QUFDNUJELGFBQVksd0JBQWNOLFFBQVFELEdBQVIsQ0FBWUcsT0FBT0ssZ0JBQW5CLENBQWQsQ0FBWjtBQUNBLENBRkQsTUFFTztBQUNORCxhQUFZLHdCQUFjSixPQUFPTSxRQUFyQixFQUErQk4sT0FBT08sUUFBdEMsRUFBZ0RQLE9BQU9RLFFBQXZELEVBQWlFUixNQUFqRSxDQUFaO0FBQ0E7O0FBR0QsYUFDRVMsV0FERixDQUNjUCxTQURkLEVBRUVRLE1BRkYsQ0FFUyxVQUFTQyxJQUFULEVBQWU7QUFDdEIsUUFBUUEsS0FBS0MsT0FBTCxDQUFhLEdBQWIsTUFBc0IsQ0FBdkIsSUFBOEJELFNBQVNqQixRQUF2QyxJQUFxRGlCLEtBQUtFLEtBQUwsQ0FBVyxDQUFDLENBQVosTUFBbUIsS0FBL0U7QUFDQSxDQUpGLEVBS0VDLE9BTEYsQ0FLVSxVQUFTSCxJQUFULEVBQWU7QUFDdkIsS0FBTUksUUFBUVgsVUFBVSxRQUFWLEVBQW9CLGVBQUtZLElBQUwsQ0FBVWQsU0FBVixFQUFxQlMsSUFBckIsQ0FBcEIsQ0FBZDtBQUNBUixJQUFHWSxNQUFNRSxJQUFULElBQWlCRixLQUFqQjtBQUNBLENBUkY7O0FBVUFHLE9BQU9DLElBQVAsQ0FBWWhCLEVBQVosRUFBZ0JXLE9BQWhCLENBQXdCLFVBQVNNLFNBQVQsRUFBb0I7QUFDM0MsS0FBSWpCLEdBQUdpQixTQUFILEVBQWNDLFNBQWxCLEVBQTZCO0FBQzVCbEIsS0FBR2lCLFNBQUgsRUFBY0MsU0FBZCxDQUF3QmxCLEVBQXhCO0FBQ0E7QUFDRCxDQUpEOztBQU1BQSxHQUFHQyxTQUFILEdBQWVBLFNBQWY7QUFDQUQsR0FBR21CLFNBQUg7O0FBRUEzQixPQUFPNEIsT0FBUCxHQUFpQnBCLEVBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1RvYmkvTW9yZS1SZWNpcGVzL3NlcnZlci9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcblxyXG5jb25zdCBiYXNlbmFtZSAgPSBwYXRoLmJhc2VuYW1lKG1vZHVsZS5maWxlbmFtZSk7XHJcbmNvbnN0IGVudiAgICAgICA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7XHJcbmNvbnN0IGNvbmZpZyAgICA9IHJlcXVpcmUoX19kaXJuYW1lICsgJy8uLi9jb25maWcvY29uZmlnLmpzb24nKVtlbnZdO1xyXG5jb25zdCAgZGIgICAgICAgID0ge307XHJcblxyXG5sZXQgc2VxdWVsaXplO1xyXG5pZiAoY29uZmlnLnVzZV9lbnZfdmFyaWFibGUpIHtcclxuXHRzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKHByb2Nlc3MuZW52W2NvbmZpZy51c2VfZW52X3ZhcmlhYmxlXSk7XHJcbn0gZWxzZSB7XHJcblx0c2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWcpO1xyXG59XHJcblxyXG5cclxuZnNcclxuXHQucmVhZGRpclN5bmMoX19kaXJuYW1lKVxyXG5cdC5maWx0ZXIoZnVuY3Rpb24oZmlsZSkge1xyXG5cdFx0cmV0dXJuIChmaWxlLmluZGV4T2YoJy4nKSAhPT0gMCkgJiYgKGZpbGUgIT09IGJhc2VuYW1lKSAmJiAoZmlsZS5zbGljZSgtMykgPT09ICcuanMnKTtcclxuXHR9KVxyXG5cdC5mb3JFYWNoKGZ1bmN0aW9uKGZpbGUpIHtcclxuXHRcdGNvbnN0IG1vZGVsID0gc2VxdWVsaXplWydpbXBvcnQnXShwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XHJcblx0XHRkYlttb2RlbC5uYW1lXSA9IG1vZGVsO1xyXG5cdH0pO1xyXG5cclxuT2JqZWN0LmtleXMoZGIpLmZvckVhY2goZnVuY3Rpb24obW9kZWxOYW1lKSB7XHJcblx0aWYgKGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKSB7XHJcblx0XHRkYlttb2RlbE5hbWVdLmFzc29jaWF0ZShkYik7XHJcblx0fVxyXG59KTtcclxuXHJcbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcclxuZGIuU2VxdWVsaXplID0gU2VxdWVsaXplO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBkYjtcclxuIl19