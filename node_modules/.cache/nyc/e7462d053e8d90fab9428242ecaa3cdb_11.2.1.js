'use strict';

module.exports = function (sequelize, DataTypes) {
	var User = sequelize.define('User', {
		username: {
			type: DataTypes.STRING,
			allowNull: {
				args: false,
				msg: 'Username cannot be empty'
			},
			unique: {
				args: true,
				msg: 'Username is already taken, please enter another'
			},
			validate: {
				len: {
					args: [3, 15],
					msg: 'username must be between the length 3 and 15'
				}
			}
		},
		fullname: {
			type: DataTypes.STRING
		},
		email: {
			type: DataTypes.STRING,
			allowNull: {
				args: false,
				msg: 'Email cannot be empty'
			},
			unique: {
				args: true,
				msg: 'Email is already taken, please enter another'
			},
			validate: {
				isEmail: {
					args: true,
					msg: 'Please enter a valid email'
				}
			}
		},
		password: {
			type: DataTypes.STRING,
			allowNull: {
				args: false,
				msg: 'Password cannot be empty'
				// validate: {
				// 	min: {
				// 		args: 6,
				// 		msg: 'Password must be atleast 6 characters long !'
				// 	}
				// }
			} }

	});

	User.associate = function (models) {
		// Associate User with Recipe
		User.hasMany(models.Recipe, {
			foreignKey: 'userId'
			// as: 'userRecipe'
		});
		// Associate User with Favoritie
		User.hasMany(models.Favorite, {
			foreignKey: 'userId'
			// as: 'userFavorite'
		});
		// Associate User with Review 
		User.hasMany(models.Review, {
			foreignKey: 'userId'
			// as: 'userReviews'
		});
		// Associate User with Vote 
		User.hasMany(models.Vote, {
			foreignKey: 'userId'
			// as: 'userVotes'
		});
	};

	return User;
};

// Things to buy for my folks !!!!!!!!!!!!!!
// Splenda !! 
// Tumeric Pounder !!
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJkZWZpbmUiLCJ1c2VybmFtZSIsInR5cGUiLCJTVFJJTkciLCJhbGxvd051bGwiLCJhcmdzIiwibXNnIiwidW5pcXVlIiwidmFsaWRhdGUiLCJsZW4iLCJmdWxsbmFtZSIsImVtYWlsIiwiaXNFbWFpbCIsInBhc3N3b3JkIiwiYXNzb2NpYXRlIiwiaGFzTWFueSIsIm1vZGVscyIsIlJlY2lwZSIsImZvcmVpZ25LZXkiLCJGYXZvcml0ZSIsIlJldmlldyIsIlZvdGUiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsVUFBU0MsU0FBVCxFQUFvQkMsU0FBcEIsRUFBK0I7QUFDL0MsS0FBTUMsT0FBT0YsVUFBVUcsTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNyQ0MsWUFBVTtBQUNUQyxTQUFNSixVQUFVSyxNQURQO0FBRVRDLGNBQVc7QUFDVkMsVUFBTSxLQURJO0FBRVZDLFNBQUs7QUFGSyxJQUZGO0FBTVRDLFdBQVE7QUFDUEYsVUFBTSxJQURDO0FBRVBDLFNBQUs7QUFGRSxJQU5DO0FBVVRFLGFBQVU7QUFDVEMsU0FBSztBQUNKSixXQUFNLENBQUMsQ0FBRCxFQUFHLEVBQUgsQ0FERjtBQUVKQyxVQUFLO0FBRkQ7QUFESTtBQVZELEdBRDJCO0FBa0JyQ0ksWUFBVTtBQUNUUixTQUFNSixVQUFVSztBQURQLEdBbEIyQjtBQXFCckNRLFNBQU87QUFDTlQsU0FBTUosVUFBVUssTUFEVjtBQUVOQyxjQUFXO0FBQ1ZDLFVBQU0sS0FESTtBQUVWQyxTQUFLO0FBRkssSUFGTDtBQU1OQyxXQUFRO0FBQ1BGLFVBQU0sSUFEQztBQUVQQyxTQUFLO0FBRkUsSUFORjtBQVVORSxhQUFVO0FBQ1RJLGFBQVM7QUFDUlAsV0FBTSxJQURFO0FBRVJDLFVBQUs7QUFGRztBQURBO0FBVkosR0FyQjhCO0FBc0NyQ08sWUFBVTtBQUNUWCxTQUFNSixVQUFVSyxNQURQO0FBRVRDLGNBQVc7QUFDVkMsVUFBTSxLQURJO0FBRVZDLFNBQUs7QUFFTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFUVyxJQUZGOztBQXRDMkIsRUFBekIsQ0FBYjs7QUFzREFQLE1BQUtlLFNBQUwsR0FBaUIsa0JBQVU7QUFDMUI7QUFDQWYsT0FBS2dCLE9BQUwsQ0FBYUMsT0FBT0MsTUFBcEIsRUFBNEI7QUFDM0JDLGVBQVk7QUFDWjtBQUYyQixHQUE1QjtBQUlBO0FBQ0FuQixPQUFLZ0IsT0FBTCxDQUFhQyxPQUFPRyxRQUFwQixFQUE4QjtBQUM3QkQsZUFBWTtBQUNaO0FBRjZCLEdBQTlCO0FBSUE7QUFDQW5CLE9BQUtnQixPQUFMLENBQWFDLE9BQU9JLE1BQXBCLEVBQTRCO0FBQzNCRixlQUFZO0FBQ1o7QUFGMkIsR0FBNUI7QUFJQTtBQUNBbkIsT0FBS2dCLE9BQUwsQ0FBYUMsT0FBT0ssSUFBcEIsRUFBMEI7QUFDekJILGVBQVk7QUFDWjtBQUZ5QixHQUExQjtBQUlBLEVBckJEOztBQXVCQSxRQUFPbkIsSUFBUDtBQUNBLENBL0VEOztBQWlGQTtBQUNBO0FBQ0EiLCJmaWxlIjoidXNlci5qcyIsInNvdXJjZVJvb3QiOiJDOi9Vc2Vycy9Ub2JpL01vcmUtUmVjaXBlcy9zZXJ2ZXIvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihzZXF1ZWxpemUsIERhdGFUeXBlcykge1xyXG5cdGNvbnN0IFVzZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCdVc2VyJywge1xyXG5cdFx0dXNlcm5hbWU6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuXHRcdFx0YWxsb3dOdWxsOiB7XHJcblx0XHRcdFx0YXJnczogZmFsc2UsXHJcblx0XHRcdFx0bXNnOiAnVXNlcm5hbWUgY2Fubm90IGJlIGVtcHR5J1xyXG5cdFx0XHR9LFxyXG5cdFx0XHR1bmlxdWU6IHtcclxuXHRcdFx0XHRhcmdzOiB0cnVlLFxyXG5cdFx0XHRcdG1zZzogJ1VzZXJuYW1lIGlzIGFscmVhZHkgdGFrZW4sIHBsZWFzZSBlbnRlciBhbm90aGVyJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHR2YWxpZGF0ZToge1xyXG5cdFx0XHRcdGxlbjoge1xyXG5cdFx0XHRcdFx0YXJnczogWzMsMTVdLFxyXG5cdFx0XHRcdFx0bXNnOiAndXNlcm5hbWUgbXVzdCBiZSBiZXR3ZWVuIHRoZSBsZW5ndGggMyBhbmQgMTUnXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0ZnVsbG5hbWU6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklOR1xyXG5cdFx0fSxcclxuXHRcdGVtYWlsOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcblx0XHRcdGFsbG93TnVsbDoge1xyXG5cdFx0XHRcdGFyZ3M6IGZhbHNlLFxyXG5cdFx0XHRcdG1zZzogJ0VtYWlsIGNhbm5vdCBiZSBlbXB0eSdcclxuXHRcdFx0fSxcclxuXHRcdFx0dW5pcXVlOiB7XHJcblx0XHRcdFx0YXJnczogdHJ1ZSxcclxuXHRcdFx0XHRtc2c6ICdFbWFpbCBpcyBhbHJlYWR5IHRha2VuLCBwbGVhc2UgZW50ZXIgYW5vdGhlcidcclxuXHRcdFx0fSxcclxuXHRcdFx0dmFsaWRhdGU6IHtcclxuXHRcdFx0XHRpc0VtYWlsOiB7XHJcblx0XHRcdFx0XHRhcmdzOiB0cnVlLFxyXG5cdFx0XHRcdFx0bXNnOiAnUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwnXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0cGFzc3dvcmQ6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuXHRcdFx0YWxsb3dOdWxsOiB7XHJcblx0XHRcdFx0YXJnczogZmFsc2UsXHJcblx0XHRcdFx0bXNnOiAnUGFzc3dvcmQgY2Fubm90IGJlIGVtcHR5J1xyXG5cdFx0XHR9XHJcblx0XHRcdC8vIHZhbGlkYXRlOiB7XHJcblx0XHRcdC8vIFx0bWluOiB7XHJcblx0XHRcdC8vIFx0XHRhcmdzOiA2LFxyXG5cdFx0XHQvLyBcdFx0bXNnOiAnUGFzc3dvcmQgbXVzdCBiZSBhdGxlYXN0IDYgY2hhcmFjdGVycyBsb25nICEnXHJcblx0XHRcdC8vIFx0fVxyXG5cdFx0XHQvLyB9XHJcblx0XHR9XHRcclxuXHRcclxuXHR9KTtcclxuXHJcblx0VXNlci5hc3NvY2lhdGUgPSBtb2RlbHMgPT4ge1xyXG5cdFx0Ly8gQXNzb2NpYXRlIFVzZXIgd2l0aCBSZWNpcGVcclxuXHRcdFVzZXIuaGFzTWFueShtb2RlbHMuUmVjaXBlLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICd1c2VySWQnXHJcblx0XHRcdC8vIGFzOiAndXNlclJlY2lwZSdcclxuXHRcdH0pO1xyXG5cdFx0Ly8gQXNzb2NpYXRlIFVzZXIgd2l0aCBGYXZvcml0aWVcclxuXHRcdFVzZXIuaGFzTWFueShtb2RlbHMuRmF2b3JpdGUsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ3VzZXJJZCcsXHJcblx0XHRcdC8vIGFzOiAndXNlckZhdm9yaXRlJ1xyXG5cdFx0fSk7XHJcblx0XHQvLyBBc3NvY2lhdGUgVXNlciB3aXRoIFJldmlldyBcclxuXHRcdFVzZXIuaGFzTWFueShtb2RlbHMuUmV2aWV3LCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICd1c2VySWQnLFxyXG5cdFx0XHQvLyBhczogJ3VzZXJSZXZpZXdzJ1xyXG5cdFx0fSk7XHJcblx0XHQvLyBBc3NvY2lhdGUgVXNlciB3aXRoIFZvdGUgXHJcblx0XHRVc2VyLmhhc01hbnkobW9kZWxzLlZvdGUsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ3VzZXJJZCdcclxuXHRcdFx0Ly8gYXM6ICd1c2VyVm90ZXMnXHJcblx0XHR9KVxyXG5cdH07XHJcblxyXG5cdHJldHVybiBVc2VyO1xyXG59O1xyXG5cclxuLy8gVGhpbmdzIHRvIGJ1eSBmb3IgbXkgZm9sa3MgISEhISEhISEhISEhISFcclxuLy8gU3BsZW5kYSAhISBcclxuLy8gVHVtZXJpYyBQb3VuZGVyICEhICJdfQ==