'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _validate = require('../middleware/validate');

var _user = require('../controller/user');

var _recipe = require('../controller/recipe');

var _review = require('../controller/review');

var _votes = require('../controller/votes');

var _favorite = require('../controller/favorite');

var _authorize = require('../middleware/authorize');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// instantiate router.


//controllers! 
var router = _express2.default.Router();

// middleware imports 


router.get('/', function (req, res) {
	res.status(200).json({ success: true, message: 'Welcome to More Recipes' });
});

// signup
router.post('/users/signup', _user.createUser);

// signin
router.post('/users/signin', _validate.checkUsernameExist, _user.loginUser);

// create recipes
router.post('/recipes', _authorize.verifyUserSession, _recipe.createRecipe);

// modify recipes 
router.put('/recipes/:recipeId', _authorize.verifyUserSession, _validate.checkRecipeExist, _recipe.modifyRecipe);

//delete recipes
router.delete('/recipes/:recipeId', _authorize.verifyUserSession, _validate.checkRecipeExist, _recipe.deleteRecipe);

// get recipes
// can also do something like GET /recipes?sort=upvotes&order=ascending
router.get('/recipes', _authorize.verifyUserSession, _recipe.getRecipes);

// get single recipe
router.get('/recipes/:recipeId', _authorize.verifyUserSession, _validate.checkRecipeExist, _recipe.getRecipe);

// post review for a recipe 
router.post('/recipes/:recipeId/review', _authorize.verifyUserSession, _validate.checkRecipeExist, _review.postReview);

// get reviews of a recipe;
router.get('/recipes/:recipeId/reviews', _authorize.verifyUserSession, _validate.checkRecipeExist, _review.getReviews);

// get all favourites
router.get('/users/:userId/favorites', _authorize.verifyUserSession, _validate.checkUserExist, _favorite.getUserFavorites);

// get all recipes posted by a user
router.get('/users/:userId/recipes', _authorize.verifyUserSession, _validate.checkUserExist, _user.getUserRecipes);

// add a recipe to favorite list
router.post('/recipes/:recipeId/favorite', _authorize.verifyUserSession, _validate.checkRecipeExist, _favorite.favoriteRecipe);

// upvote or downvote 
router.post('/recipes/:recipeId/vote-:voteType', _authorize.verifyUserSession, _validate.checkRecipeExist, _votes.voteRecipe, _votes.countVote);

exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJwb3N0IiwicHV0IiwiZGVsZXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUdBOztBQUdBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBR0E7OztBQVRBO0FBVUEsSUFBTUEsU0FBUyxrQkFBUUMsTUFBUixFQUFmOztBQWJBOzs7QUFnQkFELE9BQU9FLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCQSxLQUFJQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsRUFBQ0MsU0FBUyxJQUFWLEVBQWdCQyxTQUFTLHlCQUF6QixFQUFyQjtBQUNBLENBRkQ7O0FBSUE7QUFDQVIsT0FBT1MsSUFBUCxDQUFZLGVBQVo7O0FBRUE7QUFDQVQsT0FBT1MsSUFBUCxDQUFZLGVBQVo7O0FBRUE7QUFDQVQsT0FBT1MsSUFBUCxDQUFZLFVBQVo7O0FBRUE7QUFDQVQsT0FBT1UsR0FBUCxDQUFXLG9CQUFYOztBQUVBO0FBQ0FWLE9BQU9XLE1BQVAsQ0FBYyxvQkFBZDs7QUFFQTtBQUNBO0FBQ0FYLE9BQU9FLEdBQVAsQ0FBVyxVQUFYOztBQUVBO0FBQ0FGLE9BQU9FLEdBQVAsQ0FBVyxvQkFBWDs7QUFFQTtBQUNBRixPQUFPUyxJQUFQLENBQVksMkJBQVo7O0FBRUE7QUFDQVQsT0FBT0UsR0FBUCxDQUFXLDRCQUFYOztBQUVBO0FBQ0FGLE9BQU9FLEdBQVAsQ0FBVywwQkFBWDs7QUFFQTtBQUNBRixPQUFPRSxHQUFQLENBQVcsd0JBQVg7O0FBRUE7QUFDQUYsT0FBT1MsSUFBUCxDQUFZLDZCQUFaOztBQUVBO0FBQ0FULE9BQU9TLElBQVAsQ0FBWSxtQ0FBWjs7a0JBR2VULE0iLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IkM6L1VzZXJzL1RvYmkvTW9yZS1SZWNpcGVzL3NlcnZlci9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuXHJcbi8vIG1pZGRsZXdhcmUgaW1wb3J0cyBcclxuaW1wb3J0IHsgY2hlY2tVc2VybmFtZUV4aXN0LCBjaGVja1JlY2lwZUV4aXN0LCBjaGVja1VzZXJFeGlzdH0gZnJvbSAnLi4vbWlkZGxld2FyZS92YWxpZGF0ZSc7XHJcblxyXG4vL2NvbnRyb2xsZXJzISBcclxuaW1wb3J0IHsgY3JlYXRlVXNlciwgbG9naW5Vc2VyLCBnZXRVc2VyUmVjaXBlc30gZnJvbSAnLi4vY29udHJvbGxlci91c2VyJztcclxuaW1wb3J0IHtjcmVhdGVSZWNpcGUsIGdldFJlY2lwZXMsIGdldFJlY2lwZSwgZGVsZXRlUmVjaXBlLCBtb2RpZnlSZWNpcGV9IGZyb20gJy4uL2NvbnRyb2xsZXIvcmVjaXBlJztcclxuaW1wb3J0IHsgcG9zdFJldmlldywgZ2V0UmV2aWV3cyB9IGZyb20gJy4uL2NvbnRyb2xsZXIvcmV2aWV3JztcclxuaW1wb3J0IHsgdm90ZVJlY2lwZSwgY291bnRWb3RlIH0gZnJvbSAnLi4vY29udHJvbGxlci92b3Rlcyc7XHJcbmltcG9ydCB7IGZhdm9yaXRlUmVjaXBlLCBnZXRVc2VyRmF2b3JpdGVzIH0gZnJvbSAnLi4vY29udHJvbGxlci9mYXZvcml0ZSc7XHJcbmltcG9ydCB7IHZlcmlmeVVzZXJTZXNzaW9uIH0gZnJvbSAnLi4vbWlkZGxld2FyZS9hdXRob3JpemUnO1x0XHJcblxyXG5cclxuLy8gaW5zdGFudGlhdGUgcm91dGVyLlxyXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xyXG5cclxuXHJcbnJvdXRlci5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcclxuXHRyZXMuc3RhdHVzKDIwMCkuanNvbih7c3VjY2VzczogdHJ1ZSwgbWVzc2FnZTogJ1dlbGNvbWUgdG8gTW9yZSBSZWNpcGVzJ30pO1xyXG59KTtcclxuXHJcbi8vIHNpZ251cFxyXG5yb3V0ZXIucG9zdCgnL3VzZXJzL3NpZ251cCcsIGNyZWF0ZVVzZXIpO1xyXG5cclxuLy8gc2lnbmluXHJcbnJvdXRlci5wb3N0KCcvdXNlcnMvc2lnbmluJywgY2hlY2tVc2VybmFtZUV4aXN0LCBsb2dpblVzZXIpO1xyXG5cclxuLy8gY3JlYXRlIHJlY2lwZXNcclxucm91dGVyLnBvc3QoJy9yZWNpcGVzJywgdmVyaWZ5VXNlclNlc3Npb24sIGNyZWF0ZVJlY2lwZSk7XHJcblxyXG4vLyBtb2RpZnkgcmVjaXBlcyBcclxucm91dGVyLnB1dCgnL3JlY2lwZXMvOnJlY2lwZUlkJywgdmVyaWZ5VXNlclNlc3Npb24sIGNoZWNrUmVjaXBlRXhpc3QsIG1vZGlmeVJlY2lwZSk7XHJcblxyXG4vL2RlbGV0ZSByZWNpcGVzXHJcbnJvdXRlci5kZWxldGUoJy9yZWNpcGVzLzpyZWNpcGVJZCcsIHZlcmlmeVVzZXJTZXNzaW9uLCBjaGVja1JlY2lwZUV4aXN0LCBkZWxldGVSZWNpcGUpO1xyXG5cclxuLy8gZ2V0IHJlY2lwZXNcclxuLy8gY2FuIGFsc28gZG8gc29tZXRoaW5nIGxpa2UgR0VUIC9yZWNpcGVzP3NvcnQ9dXB2b3RlcyZvcmRlcj1hc2NlbmRpbmdcclxucm91dGVyLmdldCgnL3JlY2lwZXMnLCB2ZXJpZnlVc2VyU2Vzc2lvbiwgZ2V0UmVjaXBlcyk7XHJcblxyXG4vLyBnZXQgc2luZ2xlIHJlY2lwZVxyXG5yb3V0ZXIuZ2V0KCcvcmVjaXBlcy86cmVjaXBlSWQnLCB2ZXJpZnlVc2VyU2Vzc2lvbiwgY2hlY2tSZWNpcGVFeGlzdCwgZ2V0UmVjaXBlKTtcclxuXHJcbi8vIHBvc3QgcmV2aWV3IGZvciBhIHJlY2lwZSBcclxucm91dGVyLnBvc3QoJy9yZWNpcGVzLzpyZWNpcGVJZC9yZXZpZXcnLCB2ZXJpZnlVc2VyU2Vzc2lvbiwgY2hlY2tSZWNpcGVFeGlzdCwgcG9zdFJldmlldyk7XHJcblxyXG4vLyBnZXQgcmV2aWV3cyBvZiBhIHJlY2lwZTtcclxucm91dGVyLmdldCgnL3JlY2lwZXMvOnJlY2lwZUlkL3Jldmlld3MnLCB2ZXJpZnlVc2VyU2Vzc2lvbiwgY2hlY2tSZWNpcGVFeGlzdCwgZ2V0UmV2aWV3cyk7XHJcblxyXG4vLyBnZXQgYWxsIGZhdm91cml0ZXNcclxucm91dGVyLmdldCgnL3VzZXJzLzp1c2VySWQvZmF2b3JpdGVzJywgdmVyaWZ5VXNlclNlc3Npb24sIGNoZWNrVXNlckV4aXN0LCBnZXRVc2VyRmF2b3JpdGVzKTtcclxuXHJcbi8vIGdldCBhbGwgcmVjaXBlcyBwb3N0ZWQgYnkgYSB1c2VyXHJcbnJvdXRlci5nZXQoJy91c2Vycy86dXNlcklkL3JlY2lwZXMnLCB2ZXJpZnlVc2VyU2Vzc2lvbiwgY2hlY2tVc2VyRXhpc3QsIGdldFVzZXJSZWNpcGVzKTtcclxuXHJcbi8vIGFkZCBhIHJlY2lwZSB0byBmYXZvcml0ZSBsaXN0XHJcbnJvdXRlci5wb3N0KCcvcmVjaXBlcy86cmVjaXBlSWQvZmF2b3JpdGUnLCB2ZXJpZnlVc2VyU2Vzc2lvbiwgY2hlY2tSZWNpcGVFeGlzdCwgZmF2b3JpdGVSZWNpcGUpO1xyXG5cclxuLy8gdXB2b3RlIG9yIGRvd252b3RlIFxyXG5yb3V0ZXIucG9zdCgnL3JlY2lwZXMvOnJlY2lwZUlkL3ZvdGUtOnZvdGVUeXBlJywgdmVyaWZ5VXNlclNlc3Npb24sIGNoZWNrUmVjaXBlRXhpc3QsIHZvdGVSZWNpcGUsIGNvdW50Vm90ZSApO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjsgIl19