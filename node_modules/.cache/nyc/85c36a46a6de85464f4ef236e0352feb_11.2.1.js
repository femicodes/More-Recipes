'use strict';

module.exports = function (sequelize, DataTypes) {
	var Recipe = sequelize.define('Recipe', {
		title: {
			type: DataTypes.STRING,
			allowNull: {
				args: false,
				msg: 'Title is required'
			},
			validate: {
				notEmpty: {
					args: false,
					msg: 'Title is required'
				}
			}
		},
		description: {
			type: DataTypes.STRING
		},

		img_url: {
			type: DataTypes.STRING,
			defaultValue: 'no-img'

		},

		ingredient: {
			type: DataTypes.STRING,
			allowNull: {
				args: false,
				msg: 'Ingredient is required'
			},
			validate: {
				notEmpty: {
					args: false,
					msg: 'Ingredient is required'
				}
			}
		},

		direction: {
			type: DataTypes.STRING,
			allowNull: {
				args: false,
				msg: 'direction is required'
			},
			validate: {
				notEmpty: {
					args: false,
					msg: 'direction is required'
				}
			}
		},

		upvoteCount: {
			type: DataTypes.INTEGER,
			defaultValue: 0
		},

		downvoteCount: {
			type: DataTypes.INTEGER,
			defaultValue: 0
		}

	});

	Recipe.associate = function (models) {
		// Associate recipes with User;
		Recipe.belongsTo(models.User, {
			foreignKey: 'userId',
			onDelete: 'CASCADE'
		});
		// Associate recipes with votes;
		Recipe.hasMany(models.Vote, {
			foreignKey: 'recipeId',
			as: 'votes'
		});
		// Associate recipe with reviews 
		Recipe.hasMany(models.Review, {
			foreignKey: 'recipeId',
			as: 'reviews'
		});
	};

	return Recipe;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlY2lwZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiUmVjaXBlIiwiZGVmaW5lIiwidGl0bGUiLCJ0eXBlIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwiYXJncyIsIm1zZyIsInZhbGlkYXRlIiwibm90RW1wdHkiLCJkZXNjcmlwdGlvbiIsImltZ191cmwiLCJkZWZhdWx0VmFsdWUiLCJpbmdyZWRpZW50IiwiZGlyZWN0aW9uIiwidXB2b3RlQ291bnQiLCJJTlRFR0VSIiwiZG93bnZvdGVDb3VudCIsImFzc29jaWF0ZSIsImJlbG9uZ3NUbyIsIm1vZGVscyIsIlVzZXIiLCJmb3JlaWduS2V5Iiwib25EZWxldGUiLCJoYXNNYW55IiwiVm90ZSIsImFzIiwiUmV2aWV3Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFVBQVNDLFNBQVQsRUFBb0JDLFNBQXBCLEVBQStCO0FBQy9DLEtBQU1DLFNBQVNGLFVBQVVHLE1BQVYsQ0FBaUIsUUFBakIsRUFBMkI7QUFDekNDLFNBQU87QUFDTkMsU0FBTUosVUFBVUssTUFEVjtBQUVOQyxjQUFXO0FBQ1ZDLFVBQU0sS0FESTtBQUVWQyxTQUFLO0FBRkssSUFGTDtBQU1OQyxhQUFXO0FBQ1ZDLGNBQVU7QUFDVEgsV0FBTSxLQURHO0FBRVRDLFVBQUs7QUFGSTtBQURBO0FBTkwsR0FEa0M7QUFjekNHLGVBQWE7QUFDWlAsU0FBTUosVUFBVUs7QUFESixHQWQ0Qjs7QUFrQnpDTyxXQUFTO0FBQ1JSLFNBQU1KLFVBQVVLLE1BRFI7QUFFUlEsaUJBQWM7O0FBRk4sR0FsQmdDOztBQXdCekNDLGNBQVk7QUFDWFYsU0FBTUosVUFBVUssTUFETDtBQUVYQyxjQUFXO0FBQ1ZDLFVBQU0sS0FESTtBQUVWQyxTQUFLO0FBRkssSUFGQTtBQU1YQyxhQUFXO0FBQ1ZDLGNBQVU7QUFDVEgsV0FBTSxLQURHO0FBRVRDLFVBQUs7QUFGSTtBQURBO0FBTkEsR0F4QjZCOztBQXNDekNPLGFBQVc7QUFDVlgsU0FBTUosVUFBVUssTUFETjtBQUVWQyxjQUFXO0FBQ1ZDLFVBQU0sS0FESTtBQUVWQyxTQUFLO0FBRkssSUFGRDtBQU1WQyxhQUFXO0FBQ1ZDLGNBQVU7QUFDVEgsV0FBTSxLQURHO0FBRVRDLFVBQUs7QUFGSTtBQURBO0FBTkQsR0F0QzhCOztBQW9EekNRLGVBQVk7QUFDWFosU0FBTUosVUFBVWlCLE9BREw7QUFFWEosaUJBQWM7QUFGSCxHQXBENkI7O0FBeUR6Q0ssaUJBQWM7QUFDYmQsU0FBTUosVUFBVWlCLE9BREg7QUFFYkosaUJBQWM7QUFGRDs7QUF6RDJCLEVBQTNCLENBQWY7O0FBZ0VBWixRQUFPa0IsU0FBUCxHQUFtQixrQkFBVTtBQUM1QjtBQUNBbEIsU0FBT21CLFNBQVAsQ0FBaUJDLE9BQU9DLElBQXhCLEVBQThCO0FBQzdCQyxlQUFZLFFBRGlCO0FBRTdCQyxhQUFVO0FBRm1CLEdBQTlCO0FBSUE7QUFDQXZCLFNBQU93QixPQUFQLENBQWVKLE9BQU9LLElBQXRCLEVBQTRCO0FBQzNCSCxlQUFZLFVBRGU7QUFFM0JJLE9BQUk7QUFGdUIsR0FBNUI7QUFJQTtBQUNBMUIsU0FBT3dCLE9BQVAsQ0FBZUosT0FBT08sTUFBdEIsRUFBOEI7QUFDN0JMLGVBQVksVUFEaUI7QUFFN0JJLE9BQUk7QUFGeUIsR0FBOUI7QUFJQSxFQWhCRDs7QUFrQkEsUUFBTzFCLE1BQVA7QUFDQSxDQXBGRCIsImZpbGUiOiJyZWNpcGUuanMiLCJzb3VyY2VSb290IjoiQzovVXNlcnMvVG9iaS9Nb3JlLVJlY2lwZXMvc2VydmVyL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oc2VxdWVsaXplLCBEYXRhVHlwZXMpIHtcclxuXHRjb25zdCBSZWNpcGUgPSBzZXF1ZWxpemUuZGVmaW5lKCdSZWNpcGUnLCB7XHJcblx0XHR0aXRsZToge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG5cdFx0XHRhbGxvd051bGw6IHtcclxuXHRcdFx0XHRhcmdzOiBmYWxzZSxcclxuXHRcdFx0XHRtc2c6ICdUaXRsZSBpcyByZXF1aXJlZCdcclxuXHRcdFx0fSxcclxuXHRcdFx0dmFsaWRhdGUgOiB7XHJcblx0XHRcdFx0bm90RW1wdHk6IHtcclxuXHRcdFx0XHRcdGFyZ3M6IGZhbHNlLFxyXG5cdFx0XHRcdFx0bXNnOiAnVGl0bGUgaXMgcmVxdWlyZWQnXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9LCBcclxuXHRcdGRlc2NyaXB0aW9uOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcblx0XHR9LFxyXG5cclxuXHRcdGltZ191cmw6IHtcclxuXHRcdFx0dHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuXHRcdFx0ZGVmYXVsdFZhbHVlOiAnbm8taW1nJ1xyXG5cclxuXHRcdH0sXHJcblxyXG5cdFx0aW5ncmVkaWVudDoge1xyXG5cdFx0XHR0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG5cdFx0XHRhbGxvd051bGw6IHtcclxuXHRcdFx0XHRhcmdzOiBmYWxzZSxcclxuXHRcdFx0XHRtc2c6ICdJbmdyZWRpZW50IGlzIHJlcXVpcmVkJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHR2YWxpZGF0ZSA6IHtcclxuXHRcdFx0XHRub3RFbXB0eToge1xyXG5cdFx0XHRcdFx0YXJnczogZmFsc2UsXHJcblx0XHRcdFx0XHRtc2c6ICdJbmdyZWRpZW50IGlzIHJlcXVpcmVkJ1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdH0sXHJcblxyXG5cdFx0ZGlyZWN0aW9uOiB7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcblx0XHRcdGFsbG93TnVsbDoge1xyXG5cdFx0XHRcdGFyZ3M6IGZhbHNlLFxyXG5cdFx0XHRcdG1zZzogJ2RpcmVjdGlvbiBpcyByZXF1aXJlZCdcclxuXHRcdFx0fSxcclxuXHRcdFx0dmFsaWRhdGUgOiB7XHJcblx0XHRcdFx0bm90RW1wdHk6IHtcclxuXHRcdFx0XHRcdGFyZ3M6IGZhbHNlLFxyXG5cdFx0XHRcdFx0bXNnOiAnZGlyZWN0aW9uIGlzIHJlcXVpcmVkJ1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHJcblx0XHR1cHZvdGVDb3VudDp7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRkZWZhdWx0VmFsdWU6IDBcclxuXHRcdH0sXHJcblxyXG5cdFx0ZG93bnZvdGVDb3VudDp7XHJcblx0XHRcdHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG5cdFx0XHRkZWZhdWx0VmFsdWU6IDBcclxuXHRcdH1cclxuXHJcblx0fSk7XHJcblx0XHJcblx0UmVjaXBlLmFzc29jaWF0ZSA9IG1vZGVscyA9PiB7XHJcblx0XHQvLyBBc3NvY2lhdGUgcmVjaXBlcyB3aXRoIFVzZXI7XHJcblx0XHRSZWNpcGUuYmVsb25nc1RvKG1vZGVscy5Vc2VyLCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICd1c2VySWQnLFxyXG5cdFx0XHRvbkRlbGV0ZTogJ0NBU0NBREUnLFxyXG5cdFx0fSk7XHJcblx0XHQvLyBBc3NvY2lhdGUgcmVjaXBlcyB3aXRoIHZvdGVzO1xyXG5cdFx0UmVjaXBlLmhhc01hbnkobW9kZWxzLlZvdGUsIHtcclxuXHRcdFx0Zm9yZWlnbktleTogJ3JlY2lwZUlkJyxcclxuXHRcdFx0YXM6ICd2b3RlcydcclxuXHRcdH0pO1xyXG5cdFx0Ly8gQXNzb2NpYXRlIHJlY2lwZSB3aXRoIHJldmlld3MgXHJcblx0XHRSZWNpcGUuaGFzTWFueShtb2RlbHMuUmV2aWV3LCB7XHJcblx0XHRcdGZvcmVpZ25LZXk6ICdyZWNpcGVJZCcsXHJcblx0XHRcdGFzOiAncmV2aWV3cydcclxuXHRcdH0pO1xyXG5cdH07XHJcblx0XHJcblx0cmV0dXJuIFJlY2lwZTtcclxufTtcclxuXHJcblxyXG4iXX0=